# pyproject.toml
[build-system]
requires = ["setuptools", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "ReadmeGenie"
description = "A tool to generate README files effortlessly"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Henrique Sagara", email = "henrique.sagara@hotmail.com" }
]
dependencies = [
    "cohere",
    "colorama",
    "groq",
    "python-dotenv",
    "toml",
    "black",
    "ruff",
    "pre-commit",
    "coverage"
]
dynamic = ["version"]  # Keep only 'version' dynamic

requires-python = ">=3.7"

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

[tool.setuptools_scm]
version_scheme = "post-release"
write_to = "src/_version.py"  # Optional: Write version to a file

[project.urls]
Homepage = "https://github.com/HTSagara/readme_genie"
Documentation = "https://github.com/HTSagara/readme_genie/blob/main/README.md"

# Set up black as formatter
[tool.black]
line-length = 79
target-version = ["py311"]

# Set up ruff as linter only
[tool.ruff]
# Exclude directories that donâ€™t need linting (e.g., virtual environments)
exclude = [
    "venv/",
    "__pycache__/"
]
fix = true


# Enable specific linting rules
select = ["F", "E", "W", "B", "I", "S"]  # Example codes: F=flake8, E=errors, W=warnings, B=bugbear, I=import, S=safety
# Exclude Black-compatible rules to avoid conflicts with Black's formatting.
ignore = ["E501", "E203", "E231"]  # Exclude Black-incompatible style issues

[tool.coverage.run]
source = ["."]
branch = true
omit = ["tests/*"]


[tool.pytest.ini_options]
pythonpath = ["src"]
